name: Riscy chips

on:
  push:
    branches:
      - '**'

jobs:
  build_verilator:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Verilator Action
      uses: V0XNIHILI/install-verilator-action@main

    - name: Cache Verilator Binary
      uses: actions/cache@v4
      with:
        path: /usr/local/share/verilator/
        key: verilator-binary

  riscy32_single:
    runs-on: ubuntu-latest
    needs: build_verilator
    strategy:
      matrix: 
        component: ["alu", "control"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Perpare for verilator
      run: | 
        sudo mkdir -p /usr/local/share/verilator/
        sudo chown -R $(whoami):$(whoami) /usr/local/share/verilator/

    - name: Restore Verilator Binary
      uses: actions/cache@v4
      with:
        path: /usr/local/share/verilator/
        key: verilator-binary

    - name: Set up verilator
      run: | 
        sudo apt-get install ccache
        chmod -R +x /usr/local/share/verilator/*
        sudo ln -s /usr/local/share/verilator/bin/verilator /usr/local/bin/verilator

    - name: Setup sooty
      run: |
        sudo apt-get install -y python3
        python3 -m pip install sootty
        mkdir waveforms

    - name: Run the testbench
      run: | 
        verilator --timescale 10ns/1ns --clk --assert -Wall --trace --binary cores/riscy32_single/tests/${{ matrix.component }}_tb.sv cores/riscy32_single/src/${{ matrix.component }}.sv;
        ./obj_dir/V${{ matrix.component }}_tb
        sootty "sim.vcd" --l 100 -o > waveforms/${{ matrix.component }}.svg

    - name: Upload waveform as artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.component}} waveform
        path: ./waveforms

  #  conway:
  #    runs-on: ubuntu-latest
  #    needs: build_verilator
  #
  #    steps:
  #    - name: Checkout code
  #      uses: actions/checkout@v4
  #
  #    - name: Perpare for verilator
  #      run: | 
  #        sudo mkdir -p /usr/local/share/verilator/
  #        sudo chown -R $(whoami):$(whoami) /usr/local/share/verilator/
  #
  #    - name: Restore Verilator Binary
  #      uses: actions/cache@v4
  #      with:
  #        path: /usr/local/share/verilator/
  #        key: verilator-binary
  #
  #    - name: Set up verilator
  #      run: | 
  #        sudo apt-get install ccache
  #        chmod -R +x /usr/local/share/verilator/*
  #        sudo ln -s /usr/local/share/verilator/bin/verilator /usr/local/bin/verilator
  #
  #    - name: Run the testbench
  #      run: | 
  #        verilator --timescale 10ns/1ns --clk --assert -Wall --trace --binary cores/conway/tests/conway_tb.sv cores/conway/src/conway.sv;
  #        ./obj_dir/Vconway_tb
