name: Riscy chips

on:
  push:
    branches:
      - '**'

jobs:
  build_verilator:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Verilator Action
      uses: V0XNIHILI/install-verilator-action@main

    - name: Cache Verilator Binary
      uses: actions/cache@v4
      with:
        path: /usr/local/share/verilator/
        key: verilator-binary

  riscy32_single_components:
    runs-on: ubuntu-latest
    needs: build_verilator

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Perpare for verilator
      run: | 
        sudo mkdir -p /usr/local/share/verilator/
        sudo chown -R $(whoami):$(whoami) /usr/local/share/verilator/

    - name: Restore Verilator Binary
      uses: actions/cache@v4
      with:
        path: /usr/local/share/verilator/
        key: verilator-binary

    - name: Set up verilator
      run: | 
        sudo apt-get install ccache
        chmod -R +x /usr/local/share/verilator/*
        sudo ln -s /usr/local/share/verilator/bin/verilator /usr/local/bin/verilator

    - name: Setup sootty
      run: |
        sudo apt-get install -y python3
        python3 -m pip install sootty
        mkdir -p waveforms/svg waveforms/vcd

    - name: Run the testbenches
      run: | # We need to rethink this, I want to use a matrix
        ITEMS="alu control" # without clock
        for item in $ITEMS; do
          verilator --timescale 10ns/1ns --assert --trace --binary cores/riscy32_single/tests/${item}_tb.sv cores/riscy32_single/src/${item}.sv
          ./obj_dir/V${item}_tb
          sootty "${item}.vcd" -o > waveforms/svg/${item}.svg
          mv ${item}.vcd ./waveforms/vcd/
        done
        ITEMS="register memory" # With clock
        for item in $ITEMS; do
          verilator --clk clk --timescale 10ns/1ns --assert --trace --binary cores/riscy32_single/tests/${item}_tb.sv cores/riscy32_single/src/${item}.sv
          ./obj_dir/V${item}_tb
          sootty "${item}.vcd" -o > waveforms/svg/${item}.svg
          mv ${item}.vcd ./waveforms/vcd/
        done

    - name: Cache Waveforms 
      uses: actions/cache@v4
      with:
        path: ./waveforms
        key: waveforms

  waveforms:
    runs-on: ubuntu-latest
    needs: riscy32_single_components
    steps:
    - name: Restore waveforms
      uses: actions/cache@v4
      with:
        path: ./waveforms
        key: waveforms

    - name: Upload waveforms as artifact
      uses: actions/upload-artifact@v4
      with:
        name: waveforms
        path: ./waveforms

  conway:
    runs-on: ubuntu-latest
    needs: build_verilator

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Perpare for verilator
      run: | 
        sudo mkdir -p /usr/local/share/verilator/
        sudo chown -R $(whoami):$(whoami) /usr/local/share/verilator/

    - name: Restore Verilator Binary
      uses: actions/cache@v4
      with:
        path: /usr/local/share/verilator/
        key: verilator-binary

    - name: Set up verilator
      run: | 
        sudo apt-get install ccache
        chmod -R +x /usr/local/share/verilator/*
        sudo ln -s /usr/local/share/verilator/bin/verilator /usr/local/bin/verilator

    - name: Run the testbench
      run: | 
        verilator --timescale 10ns/1ns --clk --assert -Wall --trace --binary cores/conway/tests/conway_tb.sv cores/conway/src/conway.sv;
        ./obj_dir/Vconway_tb
